function formatToDecimal(value) {
  // Remove currency symbols and whitespace
  let cleanValue = value.replace(/[^\d,.-]/g, "").trim();

  // Remove thousands separator (dots)
  cleanValue = cleanValue.replace(/\./g, "");

  // Replace comma with dot for decimal
  cleanValue = cleanValue.replace(",", ".");

  // Convert to a float
  let decimalValue = parseFloat(cleanValue);

  // Return the decimal value
  return decimalValue;
}


function initLikeController() {
  var likeButtons = document.querySelectorAll('[data-action="like"]');
  var unlikeButtons = document.querySelectorAll('[data-action="unlike"]');

  likeButtons.forEach(function (button) {
    if(button.getAttribute('data-initalised') != 'true'){
      button.addEventListener("click", function () {
        var carId = button.getAttribute("data-car-id");
        var carContainer = document.querySelector(
          '[data-vehicle="' + carId + '"]'
        );
        var originalPrice = carContainer.querySelector(".car-price").innerHTML;

        fetch(Urls["api_vehicle_like"](), {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-CSRFToken": csrftoken,
          },
          body: JSON.stringify({
            vehicle_id: carId,
            original_price: formatToDecimal(originalPrice),
          }),
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.success) {
              var parents = document.querySelectorAll(
                ".parentLikeButton" + carId
              );
              parents.forEach((element) => {
                if (button.getAttribute("data-type") == "card") {
                  element.innerHTML = `<button class="card bg-white dark:bg-dark dark:hover:bg-lighter_dark shadow-md rounded-lg w-full hover:bg-gray-200 p-4" data-car-id="${carId}" data-type="card" data-action="unlike">
                    <div class="flex justify-between items-center">
                      <div>
                        <h1 class="text-azf_red text-xl font-semibold transition duration-200 opacity-0 animate-fade-in-up">Gemerkt</h1>
                      </div>
                      <i class="fa-solid fa-heart animate-scaleIn text-2xl text-azf_red"></i>
                    </div>
                  </button>`;
                } else {
                  if (isMobile) {
                    element.innerHTML = `<a class="text-azf_red text-2xl px-2 py-1 rounded-lg" href="javascript:void(0);"
                    data-car-id="${carId}" data-action="unlike">
                    <span class="font-semibold"><i class="fa-solid fa-heart animate-scaleIn"></i>
                      <div class="sr-only">Entfernen</div>
                    </span>
                  </a>`;
                  } else {
                    element.innerHTML = `<button class="text-azf_red text-2xl px-2 py-1 rounded-lg" href="javascript:void(0);"
                    data-car-id="${carId}" data-action="unlike">
                    <span class="font-semibold"><i class="fa-solid fa-heart animate-scaleIn"></i>
                      <div class="sr-only">Entfernen</div>
                    </span>
                  </button>`;
                  }
                }
              });
              initLikeController();
            }
          })
          .catch((error) => {
            console.error("Error:", error);
          });
      });
      button.setAttribute('data-initalised', 'true');
    }
  });

  unlikeButtons.forEach(function (button) {
    if(button.getAttribute('data-initalised') != 'true'){
      button.addEventListener("click", function () {
        var carId = button.getAttribute("data-car-id");

        fetch(Urls["api_vehicle_unlike"](), {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-CSRFToken": csrftoken,
          },
          body: JSON.stringify({
            vehicle_id: carId,
          }),
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.success) {
              var parents = document.querySelectorAll(
                ".parentLikeButton" + carId
              );
              parents.forEach((element) => {
                if (button.getAttribute("data-type") == "card") {
                  element.innerHTML = `<button class="card bg-white dark:bg-dark dark:hover:bg-lighter_dark shadow-md rounded-lg w-full hover:bg-gray-200 p-4" data-car-id="${carId}" data-type="card" data-action="like">
                    <div class="flex justify-between items-center">
                      <div>
                        <h1 class="dark:text-dark_white text-xl font-semibold transition duration-200 opacity-0 animate-fade-in-up">Merken</h1>
                      </div>
                      <i class="fa-regular fa-heart text-2xl animate-scaleIn dark:text-dark_white"></i>
                    </div>
                  </button>`;
                } else {
                  if (isMobile) {
                    element.innerHTML = `<a class="text-azf_red text-2xl px-2 py-1 rounded-lg" href="javascript:void(0);"
                      data-car-id="${carId}" data-action="like">
                      <span class="font-semibold"><i class="fa-light fa-heart animate-scaleIn"></i>
                        <div class="sr-only">Merken</div>
                      </span>
                    </a>`;
                  } else {
                    element.innerHTML = `<button class="text-azf_red text-2xl px-2 py-1 rounded-lg" href="javascript:void(0);"
                      data-car-id="${carId}" data-action="like">
                      <span class="font-semibold"><i class="fa-light fa-heart animate-scaleIn"></i>
                        <div class="sr-only">Merken</div>
                      </span>
                    </button>`;
                  }
                }
              });
              initLikeController();
            }
          })
          .catch((error) => {
            console.error("Error:", error);
          });
      });
      button.setAttribute("data-initalised", 'true');
    }
  });
}

initLikeController();